<UserControl
    x:Class="CoinsOrganizerDesktop.Views.CoinsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:CoinsOrganizerDesktop.Helpers.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>
        <converters:PriceStringToPriceIntConverter x:Key="PriceStringToPriceIntConverter" />

        <Style x:Key="DataGridColumnTextElementStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>

        <Style x:Key="DataGridColumnTextEditElementStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>

        <Style
            x:Key="DataGridCostColumnElementStyle"
            BasedOn="{StaticResource DataGridColumnTextElementStyle}"
            TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>

        <Style
            x:Key="DataGridCostColumnEditElementStyle"
            BasedOn="{StaticResource DataGridColumnTextEditElementStyle}"
            TargetType="TextBox">
            <Setter Property="HorizontalContentAlignment" Value="Right" />
        </Style>

        <Style
            x:Key="DataGridLinkColumnElementStyle"
            BasedOn="{StaticResource DataGridColumnTextElementStyle}"
            TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="TextWrapping" Value="NoWrap" />
            <Setter Property="Margin" Value="5,0,0,0" />
        </Style>

        <Style
            x:Key="DataGridLinkColumnEditElementStyle"
            BasedOn="{StaticResource DataGridColumnTextEditElementStyle}"
            TargetType="TextBox">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="TextWrapping" Value="NoWrap" />
        </Style>

        <Style x:Key="TooltipPopupStyle" TargetType="Popup">
            <Style.Triggers>
                <DataTrigger Binding="{Binding PlacementTarget.IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="OpenPopupStoryBoard">
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames FillBehavior="HoldEnd" Storyboard.TargetProperty="IsOpen">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.25" Value="True" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <PauseStoryboard BeginStoryboardName="OpenPopupStoryBoard" />
                        <BeginStoryboard x:Name="ClosePopupStoryBoard">
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames FillBehavior="HoldEnd" Storyboard.TargetProperty="IsOpen">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:1" Value="False" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <PauseStoryboard BeginStoryboardName="ClosePopupStoryBoard" />
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <PauseStoryboard BeginStoryboardName="OpenPopupStoryBoard" />
                        <ResumeStoryboard BeginStoryboardName="ClosePopupStoryBoard" />
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />-->

        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <!--<Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>-->

                            <TextBlock Margin="5" Text="{Binding Name}" />

                            <Border
                                Grid.Row="1"
                                Margin="5,5,0,5"
                                BorderBrush="Black"
                                BorderThickness="1">
                                <ItemsPresenter />
                            </Border>

                        </Grid>
                        <!--<Expander
                            x:Name="exp"
                            Background="White"
                            Foreground="Black"
                            IsExpanded="True">
                            <Expander.Header>
                                <TextBlock Text="{Binding Name}" />
                            </Expander.Header>

                        </Expander>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid
                Grid.Row="1"
                Grid.ColumnSpan="3"
                Visibility="{Binding Source={x:Reference AddNewCoinTogButton}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="450" />
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="300" />
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="16"
                    FontWeight="Bold"
                    Text="Av foto link" />

                <TextBox
                    Grid.Row="1"
                    Grid.Column="4"
                    Margin="2.5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    FontSize="16"
                    Foreground="Black"
                    Text="{Binding NewCoin.AvFotoLink, UpdateSourceTrigger=LostFocus}" />

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="16"
                    FontWeight="Bold"
                    Text="Rev foto link" />

                <TextBox
                    Grid.Row="1"
                    Grid.Column="3"
                    Margin="2.5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    FontSize="16"
                    Foreground="Black"
                    Text="{Binding NewCoin.RevFotoLink, UpdateSourceTrigger=LostFocus}" />

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="16"
                    FontWeight="Bold"
                    Text="Назва" />

                <TextBox
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="2.5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    FontSize="16"
                    Foreground="Black"
                    Text="{Binding NewCoin.Name, UpdateSourceTrigger=LostFocus}" />

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="16"
                    FontWeight="Bold"
                    Text="Ціна" />

                <TextBox
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="2.5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    FontSize="16"
                    Foreground="Black"
                    PreviewTextInput="UIElement_OnPreviewTextInput"
                    Text="{Binding NewCoin.Price, UpdateSourceTrigger=LostFocus}" />

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="16"
                    FontWeight="Bold"
                    Text="Силка" />

                <TextBox
                    Grid.Row="1"
                    Grid.Column="2"
                    Margin="2.5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    FontSize="16"
                    Foreground="Black"
                    Text="{Binding NewCoin.Link, UpdateSourceTrigger=LostFocus}" />

                <Button
                    Grid.Row="1"
                    Grid.Column="5"
                    Width="100"
                    Margin="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Command="{Binding AddNewCoinCommand}"
                    Content="Додати монету" />
            </Grid>

            <ToggleButton
                x:Name="AddNewCoinTogButton"
                Width="100"
                Margin="5"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Content="Додати нову" />

            <ComboBox
                Grid.Row="0"
                Grid.Column="1"
                Width="170"
                Margin="5"
                HorizontalAlignment="Center"
                ItemsSource="{Binding CoinsFiltersSource}"
                SelectedIndex="0"
                SelectedItem="{Binding SelectedItemFilter}">
                <ComboBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ComboBox.GroupStyle>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>


            <!--<StackPanel
                Grid.Column="1"
                Margin="5"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <RadioButton Content="Всі" GroupName="CoinGroup">
                    <RadioButton.Template>
                        <ControlTemplate>
                            <ToggleButton
                                Width="100"
                                Margin="2,0"
                                Command="{Binding ShowAllCoinsCommand}"
                                Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>

                <RadioButton
                    Content="Наявні"
                    GroupName="CoinGroup"
                    IsChecked="True">
                    <RadioButton.Template>
                        <ControlTemplate>
                            <ToggleButton
                                Width="100"
                                Margin="2,0"
                                Command="{Binding ShowOnlyAvailableCoinsCommand}"
                                Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>

                <RadioButton Content="Продані" GroupName="CoinGroup">
                    <RadioButton.Template>
                        <ControlTemplate>
                            <ToggleButton
                                Width="100"
                                Margin="2,0"
                                Command="{Binding ShowSoldCoinsCommand}"
                                Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
            </StackPanel>-->

            <StackPanel
                Grid.Column="2"
                Margin="5"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal">

                <ToggleButton
                    Width="120"
                    Command="{Binding SortCoinsCommand}"
                    CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                    Content="Сорт від більшого" />

                <ToggleButton
                    Width="120"
                    Margin="5,0,0,0"
                    Command="{Binding GroupCoinsCommand}"
                    CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                    Content="Групувати" />

            </StackPanel>

        </Grid>

        <DataGrid
            x:Name="CoinDataGrid"
            Grid.Row="1"
            AutoGenerateColumns="False"
            ItemsSource="{Binding Coins}"
            SelectedItem="{Binding SelectedRow}"
            VirtualizingStackPanel.IsVirtualizing="True">

            <!--<DataGrid.GroupStyle>
                <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}" />
            </DataGrid.GroupStyle>-->

            <DataGrid.Columns>
                <DataGridTemplateColumn Width="45" Header="ID">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid
                                x:Name="IndexGrid"
                                Height="50"
                                Margin="-1"
                                Background="Red">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="16"
                                    FontWeight="Bold"
                                    Text="{Binding CoinId}" />

                                <Popup
                                    x:Name="fotoPopup"
                                    Width="200"
                                    Height="65"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    IsOpen="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Mode=OneWay}"
                                    Placement="Right">
                                    <Border BorderBrush="Blue" BorderThickness="1">

                                        <Grid Background="LightBlue">
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>

                                            <TextBox
                                                Grid.Row="0"
                                                Margin="2,0"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                HorizontalContentAlignment="Left"
                                                VerticalContentAlignment="Center"
                                                FontSize="10"
                                                Foreground="Black"
                                                Text="{Binding AversFotoLink, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference EditFotoLink}}" />

                                            <TextBox
                                                Grid.Row="1"
                                                Margin="2,0"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                HorizontalContentAlignment="Left"
                                                VerticalContentAlignment="Center"
                                                FontSize="10"
                                                Foreground="Black"
                                                Text="{Binding ReversFotoLink, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference EditFotoLink}}" />


                                            <TextBlock
                                                Grid.Row="0"
                                                HorizontalAlignment="Center"
                                                FontSize="16"
                                                Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=INVERSE, Source={x:Reference EditFotoLink}}">
                                                <Hyperlink NavigateUri="{Binding AversFotoLink}" RequestNavigate="Hyperlink_RequestNavigate">
                                                    Avers
                                                </Hyperlink>
                                            </TextBlock>
                                            <TextBlock
                                                Grid.Row="1"
                                                HorizontalAlignment="Center"
                                                FontSize="16"
                                                Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=INVERSE, Source={x:Reference EditFotoLink}}">
                                                <Hyperlink NavigateUri="{Binding ReversFotoLink}" RequestNavigate="Hyperlink_RequestNavigate">
                                                    Reverse
                                                </Hyperlink>
                                            </TextBlock>

                                            <ToggleButton
                                                x:Name="EditFotoLink"
                                                Grid.Row="2"
                                                Width="50"
                                                Margin="0,0,2,2"
                                                HorizontalAlignment="Right"
                                                Content="Edit"
                                                FontSize="12" />

                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>

                            <DataTemplate.Triggers>
                                <Trigger SourceName="IndexGrid" Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="bsb">
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames
                                                    FillBehavior="HoldEnd"
                                                    Storyboard.TargetName="fotoPopup"
                                                    Storyboard.TargetProperty="IsOpen">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.5" Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="bsb" />
                                    </Trigger.ExitActions>
                                </Trigger>
                            </DataTemplate.Triggers>



                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--  350  -->
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Path=Name}"
                    EditingElementStyle="{StaticResource DataGridColumnTextEditElementStyle}"
                    ElementStyle="{StaticResource DataGridColumnTextElementStyle}"
                    Header="Монета"
                    IsReadOnly="True" />


                <DataGridTemplateColumn Header="Ціна">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid
                                x:Name="PriceGrid"
                                Margin="-1"
                                Background="#FFFFFFFF">
                                <TextBox
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    FontSize="16"
                                    HorizontalContentAlignment="Right"
                                    VerticalContentAlignment="Center"
                                    FontWeight="Bold"
                                    Foreground="Black"
                                    PreviewTextInput="UIElement_OnPreviewTextInput"
                                    Text="{Binding Cost, Mode=TwoWay, StringFormat={}{0}грн., Converter={StaticResource PriceStringToPriceIntConverter}, UpdateSourceTrigger=LostFocus}" />

                                <!--<TextBlock
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    FontSize="16"
                                    FontWeight="Bold"
                                    Foreground="Black"
                                    Text="{Binding Path=Cost, StringFormat={}{0}грн.}" />-->

                                <Popup
                                    x:Name="linkPopup"
                                    Width="200"
                                    Height="50"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    IsOpen="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Mode=OneWay}"
                                    Placement="Left">
                                    <TextBlock
                                        Background="LightBlue"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        FontSize="12"
                                        Text="{Binding Link}"
                                        TextWrapping="Wrap" />
                                </Popup>
                            </Grid>

                            <DataTemplate.Triggers>
                                <Trigger SourceName="PriceGrid" Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="bsb">
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames
                                                    FillBehavior="HoldEnd"
                                                    Storyboard.TargetName="linkPopup"
                                                    Storyboard.TargetProperty="IsOpen">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.5" Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="bsb" />
                                    </Trigger.ExitActions>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--<DataGridTextColumn
                    Binding="{Binding Path=Cost, StringFormat={}{0}грн.}"
                    EditingElementStyle="{StaticResource DataGridCostColumnEditElementStyle}"
                    ElementStyle="{StaticResource DataGridCostColumnElementStyle}"
                    Header="Ціна"
                    IsReadOnly="True" />

                <DataGridTextColumn
                    Width="80"
                    Binding="{Binding Link}"
                    EditingElementStyle="{StaticResource DataGridLinkColumnEditElementStyle}"
                    ElementStyle="{StaticResource DataGridLinkColumnElementStyle}"
                    Header="Де купили"
                    IsReadOnly="True" />-->



                <DataGridTemplateColumn Width="*" Header="Allegro">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Margin="-1" Background="#FFFFFFFF">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TextBox
                                    Grid.RowSpan="2"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Right"
                                    VerticalContentAlignment="Center"
                                    BorderBrush="Black"
                                    BorderThickness="0,0,1,0"
                                    FontSize="16"
                                    Foreground="Black"
                                    PreviewTextInput="UIElement_OnPreviewTextInput"
                                    Text="{Binding ZlotyPrice, Mode=TwoWay, StringFormat={}{0}zł, Converter={StaticResource PriceStringToPriceIntConverter}, UpdateSourceTrigger=LostFocus}" />

                                <TextBox
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    BorderThickness="0"
                                    FontSize="12"
                                    Foreground="Black"
                                    Text="{Binding PolishName, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                    TextWrapping="Wrap" />

                                <TextBlock
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="2"
                                    HorizontalAlignment="Left"
                                    Visibility="{Binding IsOnAllegroSale, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Hyperlink NavigateUri="{Binding AllegroItemLink}" RequestNavigate="Hyperlink_RequestNavigate">
                                        <TextBlock Text="{Binding AllegroItemTitle}" />
                                    </Hyperlink>
                                </TextBlock>
                                <!--<StackPanel HorizontalAlignment="Right" Orientation=" Horizontal" Grid.Row="1" Grid.Column="1">

                                    <TextBlock Text="{Binding AllegroItemBiddersCount, StringFormat={}Bid{0}}" Margin="1 2"/>
                                    <TextBlock Text="{Binding AllegroItemViewsCount, StringFormat={}П{0}}" Margin="1 2"/>
                                    <TextBlock Text="{Binding AllegroItemWatchersCount, StringFormat={}Obs{0}}" Margin="1 2"/>
                                </StackPanel>-->
                                <TextBlock
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="2"
                                    HorizontalAlignment="Right"
                                    Text="{Binding AllegroItemInfo}"
                                    Visibility="{Binding IsOnAllegroSale, Converter={StaticResource BooleanToVisibilityConverter}}" />

                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <DataGridTemplateColumn Width="*" Header="Ebay">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Margin="-1">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <TextBox
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Right"
                                    VerticalContentAlignment="Center"
                                    BorderBrush="Black"
                                    BorderThickness="0,0,1,0"
                                    FontSize="16"
                                    Foreground="Black"
                                    PreviewTextInput="UIElement_OnPreviewTextInput"
                                    Text="{Binding DollarPrice, Mode=TwoWay, StringFormat={}{0}$, Converter={StaticResource PriceStringToPriceIntConverter}, UpdateSourceTrigger=LostFocus}" />

                                <TextBox
                                    Grid.Column="1"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    BorderThickness="0"
                                    FontSize="12"
                                    Foreground="Black"
                                    Text="{Binding EnglishName, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                    TextWrapping="Wrap" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Проданий/Наявний">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid x:Name="AvaliableGrid" Background="White">

                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem
                                            Header="Наявний?"
                                            IsCheckable="True"
                                            IsChecked="{Binding IsInStock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <MenuItem
                                            Command="{Binding DataContext.DeleteCoinCommand, Source={x:Reference CoinDataGrid}}"
                                            CommandParameter="{Binding Path=DataContext, RelativeSource={RelativeSource Self}}"
                                            Header="Видалити монету" />

                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <TextBlock
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    Foreground="Black"
                                    Text="{Binding OrderBL.PriceCurrency, StringFormat=Продано за {0}}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSold}" Value="True">
                                                    <Setter Property="Text" Value="Продано" />
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsSold}" Value="false">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>

                                </TextBlock>

                                <TextBlock
                                    Grid.Row="1"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    Foreground="Black">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsInStock}" Value="False">
                                                    <Setter Property="Text" Value="Не в наявності" />
                                                    <Setter Property="Background" Value="Red" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>

                                </TextBlock>

                                <!--<Popup
                                    x:Name="avaliablePopup"
                                    Width="120"
                                    Height="40"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    IsOpen="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Mode=OneWay}"
                                    Placement="Left">
                                    <StackPanel Background="LightBlue" Orientation="Vertical">

                                        <CheckBox Content="Наявний?" IsChecked="{Binding IsInStock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                        <Button
                                            Width="100"
                                            Margin="5"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Command="{Binding DataContext.DeleteCoinCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext, RelativeSource={RelativeSource Self}}"
                                            Content="Видалити монету" />

                                    </StackPanel>
                                </Popup>-->
                            </Grid>

                            <!--<DataTemplate.Triggers>
                                <Trigger SourceName="AvaliableGrid" Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="bsb">
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames
                                                    FillBehavior="HoldEnd"
                                                    Storyboard.TargetName="avaliablePopup"
                                                    Storyboard.TargetProperty="IsOpen">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.25" Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="bsb" />
                                    </Trigger.ExitActions>
                                </Trigger>
                            </DataTemplate.Triggers>-->
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>






<!--<ItemsControl
            ItemsSource="{Binding Coins}"
            ScrollViewer.CanContentScroll="True"
            VirtualizingStackPanel.IsVirtualizing="True">

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.Template>
                <ControlTemplate>
                    <Border
                        Padding="{TemplateBinding Control.Padding}"
                        Background="{TemplateBinding Panel.Background}"
                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </ItemsControl.Template>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border MinHeight="50" Margin="0 2" BorderThickness="0 0 0 1" BorderBrush="DarkCyan">
                        <Grid ShowGridLines="True">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45" />
                                <ColumnDefinition Width="500" />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" Text="{Binding CoinId}" />
                            <TextBox TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" Margin="3 0" Grid.Column="1" Text="{Binding Name}" />

                        </Grid>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>--> 